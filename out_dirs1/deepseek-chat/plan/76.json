{"meta": {"prompt_type": "json", "API_list": ["Crowdfunding.get_hot_projects", "Crowdfunding.get_project_details", "Crowdfunding.calculate_potential_returns", "Crowdfunding.calculate_risk", "Crowdfunding.get_platform_login_link"]}, "ground_truth": [{"id": 0, "prev": [], "name": "Crowdfunding.get_hot_projects", "args": {}}, {"id": 1, "prev": [0], "name": "Crowdfunding.get_project_details", "args": {"projectId": 12345}}, {"id": 2, "prev": [0], "name": "Crowdfunding.get_project_details", "args": {"projectId": 67890}}, {"id": 3, "prev": [0], "name": "Crowdfunding.get_project_details", "args": {"projectId": 54321}}, {"id": 4, "prev": [1], "name": "Crowdfunding.calculate_potential_returns", "args": {"projectId": 12345, "investmentAmount": 1000}}, {"id": 5, "prev": [2], "name": "Crowdfunding.calculate_potential_returns", "args": {"projectId": 67890, "investmentAmount": 1000}}, {"id": 6, "prev": [3], "name": "Crowdfunding.calculate_potential_returns", "args": {"projectId": 54321, "investmentAmount": 1000}}, {"id": 7, "prev": [1], "name": "Crowdfunding.calculate_risk", "args": {"projectId": 12345}}, {"id": 8, "prev": [2], "name": "Crowdfunding.calculate_risk", "args": {"projectId": 67890}}, {"id": 9, "prev": [3], "name": "Crowdfunding.calculate_risk", "args": {"projectId": 54321}}, {"id": 10, "prev": [4, 5, 6, 7, 8, 9], "name": "Crowdfunding.get_platform_login_link", "args": {}}, {"id": 11, "prev": [10], "name": "FinishAction", "args": {}}], "origin_prompt": [{"role": "system", "content": "你能够调用以下的API:\n[['Crowdfunding.get_hot_projects', {'name': 'Crowdfunding.get_hot_projects', 'description': 'Retrieve a list of currently hot crowdfunding projects.', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'projects', 'description': 'A list of at most 3 hot projects, containing id, name, and description.'}]}], ['Crowdfunding.get_project_details', {'name': 'Crowdfunding.get_project_details', 'description': 'Retrieve detailed information about a specific crowdfunding project.', 'required_parameters': [{'name': 'projectId', 'type': 'NUMBER', 'description': 'The ID of the project.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the project.'}, {'name': 'description', 'description': 'The description of the project.'}, {'name': 'goal', 'description': 'The funding goal of the project.'}, {'name': 'currentFunding', 'description': 'The current funding amount.'}, {'name': 'endDate', 'description': 'The end date of the project.'}]}], ['Crowdfunding.calculate_potential_returns', {'name': 'Crowdfunding.calculate_potential_returns', 'description': 'Calculate the potential returns on investment for a specific project.', 'required_parameters': [{'name': 'projectId', 'type': 'NUMBER', 'description': 'The ID of the project.'}, {'name': 'investmentAmount', 'type': 'NUMBER', 'description': 'The amount of money to invest.'}], 'optional_parameters': [], 'return_data': [{'name': 'potentialReturns', 'description': 'The potential returns on investment.'}]}], ['Crowdfunding.calculate_risk', {'name': 'Crowdfunding.calculate_risk', 'description': 'Calculate the risk associated with a specific project.', 'required_parameters': [{'name': 'projectId', 'type': 'NUMBER', 'description': 'The ID of the project.'}], 'optional_parameters': [], 'return_data': [{'name': 'riskLevel', 'description': 'The risk level of the project.'}]}], ['Crowdfunding.get_platform_login_link', {'name': 'Crowdfunding.get_platform_login_link', 'description': 'Get the login link for the crowdfunding platform.', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'loginLink', 'description': 'The login link for the platform.'}]}]]\n请生成一个解决用户问题的计划，计划应该是一个行为列表，每个行为的格式如下:\n\n[{\n    // 动作的ID\n    \"id\": number;\n    // 动作要调用的API名称\n    \"name\": string;\n    // 当前API的参数输入(JSON格式)\n    \"args\": \"str(Record<string, any>)\";\n}, ...\n]\n\n你可以在计划中想象参数的值，这些指令将按顺序执行。\n例如，如果你想调用 `api1` 并传入 `arg1` 和 `arg2`，你可以写下面的计划:\n\n[{\n    \"id\": 0,\n    \"name\": \"api1\",\n    \"args\": \"{'arg1': 'value1', 'arg2': 'value2', ...}\",\n}, ...\n]\n\n这些参数将在执行时被替换为真实的值。请注意，参数应该是一个字符串，而不是一个字典。\n请在字典的参数中使用 ''，在其他地方使用 \"\"，不要打印值为 None 或 null 的参数。\n\n你应该只生成一个 JSON 格式的计划列表。列表应该是完整的计划列表，不要有 `...`。\n不要生成任何解释 JSON 的文本。\n"}, {"role": "user", "content": "我想进行众筹投资。首先，请获取当前热门众筹项目的信息。然后，根据我的投资预算和风险偏好，推荐一个众筹项目。接下来，计算如果我投资推荐的众筹项目，可能的收益和风险。最后，提供一个众筹投资平台的登录链接。"}], "prediction": "[\n    {\n        \"id\": 0,\n        \"name\": \"Crowdfunding.get_hot_projects\",\n        \"args\": \"{}\"\n    },\n    {\n        \"id\": 1,\n        \"name\": \"Crowdfunding.get_project_details\",\n        \"args\": \"{'projectId': 'selected_project_id'}\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Crowdfunding.calculate_potential_returns\",\n        \"args\": \"{'projectId': 'selected_project_id', 'investmentAmount': 'investment_amount'}\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Crowdfunding.calculate_risk\",\n        \"args\": \"{'projectId': 'selected_project_id'}\"\n    },\n    {\n        \"id\": 4,\n        \"name\": \"Crowdfunding.get_platform_login_link\",\n        \"args\": \"{}\"\n    }\n]"}