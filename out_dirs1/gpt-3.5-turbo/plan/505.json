{"meta": {"prompt_type": "json", "API_list": ["ReportFetcher.get_latest_report", "CaseAnalyzer.analyze_cases", "InvestmentTracker.get_investment_status", "RecommendationGenerator.generate_recommendations"]}, "ground_truth": [{"id": 0, "prev": [], "name": "ReportFetcher.get_latest_report", "args": {"report_type": "internet_economy_online_live"}}, {"id": 1, "prev": [0], "name": "CaseAnalyzer.analyze_cases", "args": {"report_id": "latest_report_id"}}, {"id": 2, "prev": [1], "name": "InvestmentTracker.get_investment_status", "args": {"case_ids": ["success_case_id_1", "failure_case_id_1"]}}, {"id": 3, "prev": [2], "name": "RecommendationGenerator.generate_recommendations", "args": {"analysis_id": "analysis_id_from_step_2", "investment_status_id": "investment_status_id_from_step_3"}}, {"id": 4, "prev": [3], "name": "FinishAction", "args": {}}], "origin_prompt": [{"role": "system", "content": "你能够调用以下的API:\n[['ReportFetcher.get_latest_report', {'name': 'ReportFetcher.get_latest_report', 'description': 'Fetch the latest report on a given topic.', 'required_parameters': [{'name': 'report_type', 'type': 'STRING', 'description': 'the type of report'}], 'optional_parameters': [], 'return_data': [{'name': 'report_id', 'description': 'the ID of the fetched report.'}]}], ['CaseAnalyzer.analyze_cases', {'name': 'CaseAnalyzer.analyze_cases', 'description': 'Analyze success and failure cases from a given report.', 'required_parameters': [{'name': 'report_id', 'type': 'STRING', 'description': 'the ID of the report to analyze'}], 'optional_parameters': [], 'return_data': [{'name': 'analysis_id', 'description': 'the ID of the analysis.'}]}], ['InvestmentTracker.get_investment_status', {'name': 'InvestmentTracker.get_investment_status', 'description': 'Get the current investment status for given cases.', 'required_parameters': [{'name': 'case_ids', 'type': 'LIST', 'description': 'the list of case IDs to track'}], 'optional_parameters': [], 'return_data': [{'name': 'investment_status_id', 'description': 'the ID of the investment status.'}]}], ['RecommendationGenerator.generate_recommendations', {'name': 'RecommendationGenerator.generate_recommendations', 'description': 'Generate recommendations based on analysis and investment status.', 'required_parameters': [{'name': 'analysis_id', 'type': 'STRING', 'description': 'the ID of the analysis.'}, {'name': 'investment_status_id', 'type': 'STRING', 'description': 'the ID of the investment status.'}], 'optional_parameters': [], 'return_data': [{'name': 'recommendations', 'description': 'the list of recommendations.'}]}]]\n请生成一个解决用户问题的计划，计划应该是一个行为列表，每个行为的格式如下:\n\n[{\n    // 动作的ID\n    \"id\": number;\n    // 动作要调用的API名称\n    \"name\": string;\n    // 当前API的参数输入(JSON格式)\n    \"args\": \"str(Record<string, any>)\";\n}, ...\n]\n\n你可以在计划中想象参数的值，这些指令将按顺序执行。\n例如，如果你想调用 `api1` 并传入 `arg1` 和 `arg2`，你可以写下面的计划:\n\n[{\n    \"id\": 0,\n    \"name\": \"api1\",\n    \"args\": \"{'arg1': 'value1', 'arg2': 'value2', ...}\",\n}, ...\n]\n\n这些参数将在执行时被替换为真实的值。请注意，参数应该是一个字符串，而不是一个字典。\n请在字典的参数中使用 ''，在其他地方使用 \"\"，不要打印值为 None 或 null 的参数。\n\n你应该只生成一个 JSON 格式的计划列表。列表应该是完整的计划列表，不要有 `...`。\n不要生成任何解释 JSON 的文本。\n"}, {"role": "user", "content": "我想了解互联网经济的在线直播发展。首先，获取最新的互联网在线直播发展报告。接着，分析报告中提到的在线直播成功案例和失败案例。然后，查询当前市场上对这些在线直播的投资情况。最后，基于这些信息，提供一些在线直播发展建议。"}], "prediction": "[\n    {\n        \"id\": 0,\n        \"name\": \"ReportFetcher.get_latest_report\",\n        \"args\": \"{'report_type': 'online live streaming development'}\"\n    },\n    {\n        \"id\": 1,\n        \"name\": \"CaseAnalyzer.analyze_cases\",\n        \"args\": \"{'report_id': 'REPLACE_WITH_REPORT_ID'}\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"InvestmentTracker.get_investment_status\",\n        \"args\": \"{'case_ids': ['REPLACE_WITH_CASE_ID1', 'REPLACE_WITH_CASE_ID2', ...]}\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"RecommendationGenerator.generate_recommendations\",\n        \"args\": \"{'analysis_id': 'REPLACE_WITH_ANALYSIS_ID', 'investment_status_id': 'REPLACE_WITH_INVESTMENT_STATUS_ID'}\"\n    }\n]"}