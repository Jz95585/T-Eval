{"meta": {"prompt_type": "json", "API_list": ["GoogleScholar.search_google_scholar", "TaxHealthManagement.get_latest_guide", "TaxHealthManagement.get_case_data", "TaxHealthManagement.get_tool_usage", "TaxHealthManagement.analyze_and_provide_suggestions"]}, "ground_truth": [{"id": 0, "prev": [], "name": "TaxHealthManagement.get_latest_guide", "args": {"year": "2024"}}, {"id": 1, "prev": [0], "name": "TaxHealthManagement.get_case_data", "args": {"year": "2023"}}, {"id": 2, "prev": [1], "name": "TaxHealthManagement.get_tool_usage", "args": {}}, {"id": 3, "prev": [2], "name": "TaxHealthManagement.analyze_and_provide_suggestions", "args": {}}, {"id": 4, "prev": [3], "name": "FinishAction", "args": {}}], "origin_prompt": [{"role": "system", "content": "你能够调用以下的API:\n[['GoogleScholar.search_google_scholar', {'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}], ['TaxHealthManagement.get_latest_guide', {'name': 'TaxHealthManagement.get_latest_guide', 'description': 'Get the latest guide on tax health management for residents in China', 'required_parameters': [{'name': 'year', 'description': 'year of the guide', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'guide_content', 'description': 'content of the latest guide'}]}], ['TaxHealthManagement.get_case_data', {'name': 'TaxHealthManagement.get_case_data', 'description': 'Get case data on tax health management for residents in China', 'required_parameters': [{'name': 'year', 'description': 'year of the case data', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'case_data', 'description': 'case data of the specified year'}]}], ['TaxHealthManagement.get_tool_usage', {'name': 'TaxHealthManagement.get_tool_usage', 'description': 'Get the current usage of tax health management tools', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'tool_usage', 'description': 'usage data of the tools'}]}], ['TaxHealthManagement.analyze_and_provide_suggestions', {'name': 'TaxHealthManagement.analyze_and_provide_suggestions', 'description': 'Analyze the guide and case data to provide health suggestions', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'suggestions', 'description': 'health suggestions based on analysis'}]}]]\n请生成一个解决用户问题的计划，计划应该是一个行为列表，每个行为的格式如下:\n\n[{\n    // 动作的ID\n    \"id\": number;\n    // 动作要调用的API名称\n    \"name\": string;\n    // 当前API的参数输入(JSON格式)\n    \"args\": \"str(Record<string, any>)\";\n}, ...\n]\n\n你可以在计划中想象参数的值，这些指令将按顺序执行。\n例如，如果你想调用 `api1` 并传入 `arg1` 和 `arg2`，你可以写下面的计划:\n\n[{\n    \"id\": 0,\n    \"name\": \"api1\",\n    \"args\": \"{'arg1': 'value1', 'arg2': 'value2', ...}\",\n}, ...\n]\n\n这些参数将在执行时被替换为真实的值。请注意，参数应该是一个字符串，而不是一个字典。\n请在字典的参数中使用 ''，在其他地方使用 \"\"，不要打印值为 None 或 null 的参数。\n\n你应该只生成一个 JSON 格式的计划列表。列表应该是完整的计划列表，不要有 `...`。\n不要生成任何解释 JSON 的文本。"}, {"role": "user", "content": "我想了解中国居民的税务健康管理。首先，请提供2024年中国居民税务健康管理的最新指南。然后，获取过去一年中国居民税务健康管理的案例数据。接着，获取当前税务健康管理工具的使用情况。最后，基于指南和案例分析，提供一些健康建议。"}], "prediction": "[{\n    \"id\": 0,\n    \"name\": \"TaxHealthManagement.get_latest_guide\",\n    \"args\": \"{\\\"year\\\": \\\"2024\\\"}\"\n}, {\n    \"id\": 1,\n    \"name\": \"TaxHealthManagement.get_case_data\",\n    \"args\": \"{\\\"year\\\": \\\"2023\\\"}\"\n}, {\n    \"id\": 2,\n    \"name\": \"TaxHealthManagement.get_tool_usage\",\n    \"args\": \"{}\"\n}, {\n    \"id\": 3,\n    \"name\": \"TaxHealthManagement.analyze_and_provide_suggestions\",\n    \"args\": \"{}\"\n}]"}