{"meta": {"prompt_type": "json", "API_list": ["InvestmentStrategy.fetch_articles", "GoldPrice.get_historical_data", "GoldPrice.get_real_time_data", "InvestmentAdvisor.get_advice"]}, "ground_truth": [{"id": 0, "prev": [], "name": "InvestmentStrategy.fetch_articles", "args": "{\"topic\": \"retirement investment\", \"count\": 5}"}, {"id": 1, "prev": [0], "name": "GoldPrice.get_historical_data", "args": "{\"year\": 2023}"}, {"id": 2, "prev": [1], "name": "GoldPrice.get_real_time_data", "args": "{}"}, {"id": 3, "prev": [2], "name": "InvestmentAdvisor.get_advice", "args": "{\"portfolio_name\": \"retirement portfolio\"}"}, {"id": 4, "prev": [3], "name": "FinishAction", "args": "{}"}], "origin_prompt": [{"role": "system", "content": "你能够调用以下的API:\n[['InvestmentStrategy.fetch_articles', {'name': 'InvestmentStrategy.fetch_articles', 'description': 'This function fetches articles on a specific investment topic.', 'required_parameters': [{'name': 'topic', 'type': 'STRING', 'description': 'The topic of the articles, e.g., retirement investment.'}, {'name': 'count', 'type': 'NUMBER', 'description': 'The number of articles to fetch.'}], 'optional_parameters': [], 'return_data': [{'name': 'articles', 'description': 'A list of articles matching the topic.'}]}], ['GoldPrice.get_historical_data', {'name': 'GoldPrice.get_historical_data', 'description': 'This function retrieves historical gold price data for a specific year.', 'required_parameters': [{'name': 'year', 'type': 'NUMBER', 'description': 'The year for which to fetch the data.'}], 'optional_parameters': [], 'return_data': [{'name': 'prices', 'description': 'Historical gold prices for the specified year.'}]}], ['GoldPrice.get_real_time_data', {'name': 'GoldPrice.get_real_time_data', 'description': 'This function retrieves real-time gold market data.', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'current_price', 'description': 'The current market price of gold.'}]}], ['InvestmentAdvisor.get_advice', {'name': 'InvestmentAdvisor.get_advice', 'description': 'This function provides professional investment advice based on a portfolio name.', 'required_parameters': [{'name': 'portfolio_name', 'type': 'STRING', 'description': 'The name of the investment portfolio.'}], 'optional_parameters': [], 'return_data': [{'name': 'advice', 'description': 'Professional investment advice for the specified portfolio.'}]}]]\n请生成一个解决用户问题的计划，计划应该是一个行为列表，每个行为的格式如下:\n\n[{\n    // 动作的ID\n    \"id\": number;\n    // 动作要调用的API名称\n    \"name\": string;\n    // 当前API的参数输入(JSON格式)\n    \"args\": \"str(Record<string, any>)\";\n}, ...\n]\n\n你可以在计划中想象参数的值，这些指令将按顺序执行。\n例如，如果你想调用 `InvestmentStrategy.fetch_articles` 并传入 `topic` 和 `count`，你可以写下面的计划:\n\n[{\n    \"id\": 0,\n    \"name\": \"InvestmentStrategy.fetch_articles\",\n    \"args\": \"{'topic': 'retirement investment', 'count': 5}\",\n}, ...\n]\n\n这些参数将在执行时被替换为真实的值。请注意，参数应该是一个字符串，而不是一个字典。\n请在字典的参数中使用 ''，在其他地方使用 \"\"，不要打印值为 None 或 null 的参数。\n\n你应该只生成一个 JSON 格式的计划列表。列表应该是完整的计划列表，不要有 `...`。\n不要生成任何解释 JSON 的文本。\n"}, {"role": "user", "content": "我正在规划我的退休投资组合。首先，我需要获取最新的关于退休投资策略的5篇文章。然后，获取2023年全年黄金价格的历史数据。接着，获取当前的黄金实时市场数据。最后，通过投资组合名称获取一些专业的退休投资建议。"}], "prediction": "[{\n    \"id\": 0,\n    \"name\": \"InvestmentStrategy.fetch_articles\",\n    \"args\": \"{'topic': 'retirement investment', 'count': 5}\"\n},\n{\n    \"id\": 1,\n    \"name\": \"GoldPrice.get_historical_data\",\n    \"args\": \"{'year': 2023}\"\n},\n{\n    \"id\": 2,\n    \"name\": \"GoldPrice.get_real_time_data\",\n    \"args\": \"{}\"\n},\n{\n    \"id\": 3,\n    \"name\": \"InvestmentAdvisor.get_advice\",\n    \"args\": \"{'portfolio_name': 'Retirement Portfolio'}\"\n}]"}