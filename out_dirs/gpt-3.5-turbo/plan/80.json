{"meta": {"prompt_type": "json", "API_list": ["ResearchArticles.fetch_articles", "InsuranceData.get_historical_data", "MarketData.get_real_time_data", "InsuranceAdvice.get_purchase_advice"]}, "ground_truth": [{"id": 0, "prev": [], "name": "ResearchArticles.fetch_articles", "args": "{\"topic\": \"annuity insurance\", \"year\": 2023}"}, {"id": 1, "prev": [0], "name": "InsuranceData.get_historical_data", "args": "{\"year\": 2024, \"productType\": \"annuity\"}"}, {"id": 2, "prev": [1], "name": "MarketData.get_real_time_data", "args": "{\"productType\": \"annuity\"}"}, {"id": 3, "prev": [2], "name": "InsuranceAdvice.get_purchase_advice", "args": "{\"companyName\": \"Major Insurance Co.\"}"}, {"id": 4, "prev": [3], "name": "FinishAction", "args": "{}"}], "origin_prompt": [{"role": "system", "content": "你能够调用以下的API:\n[['ResearchArticles.fetch_articles', {'name': 'ResearchArticles.fetch_articles', 'description': 'This function fetches research articles based on a specified topic and year.', 'required_parameters': [{'name': 'topic', 'type': 'STRING', 'description': 'The topic of the research articles, e.g., annuity insurance.'}, {'name': 'year', 'type': 'NUMBER', 'description': 'The year of the research articles.'}], 'optional_parameters': [], 'return_data': [{'name': 'articles', 'description': 'A list of research articles matching the topic and year.'}]}], ['InsuranceData.get_historical_data', {'name': 'InsuranceData.get_historical_data', 'description': 'This function retrieves historical data for insurance products of a specified type and year.', 'required_parameters': [{'name': 'year', 'type': 'NUMBER', 'description': 'The year for which historical data is required.'}, {'name': 'productType', 'type': 'STRING', 'description': 'The type of insurance product, e.g., annuity.'}], 'optional_parameters': [], 'return_data': [{'name': 'data', 'description': 'Historical data for the specified insurance product type and year.'}]}], ['MarketData.get_real_time_data', {'name': 'MarketData.get_real_time_data', 'description': 'This function retrieves real-time market data for a specified type of insurance product.', 'required_parameters': [{'name': 'productType', 'type': 'STRING', 'description': 'The type of insurance product, e.g., annuity.'}], 'optional_parameters': [], 'return_data': [{'name': 'data', 'description': 'Real-time market data for the specified insurance product type.'}]}], ['InsuranceAdvice.get_purchase_advice', {'name': 'InsuranceAdvice.get_purchase_advice', 'description': 'This function provides purchase advice for insurance products based on the company name.', 'required_parameters': [{'name': 'companyName', 'type': 'STRING', 'description': 'The name of the insurance company.'}], 'optional_parameters': [], 'return_data': [{'name': 'advice', 'description': 'Purchase advice for the specified insurance company.'}]}]]\n请生成一个解决用户问题的计划，计划应该是一个行为列表，每个行为的格式如下:\n\n[{\n    // 动作的ID\n    \"id\": number;\n    // 动作要调用的API名称\n    \"name\": string;\n    // 当前API的参数输入(JSON格式)\n    \"args\": \"str(Record<string, any>)\";\n}, ...\n]\n\n你可以在计划中想象参数的值，这些指令将按顺序执行。\n例如，如果你想调用 `ResearchArticles.fetch_articles` 并传入 `topic` 和 `year`，你可以写下面的计划:\n\n[{\n    \"id\": 0,\n    \"name\": \"ResearchArticles.fetch_articles\",\n    \"args\": \"{'topic': 'annuity insurance', 'year': 2023}\",\n}, ...\n]\n\n这些参数将在执行时被替换为真实的值。请注意，参数应该是一个字符串，而不是一个字典。\n请在字典的参数中使用 ''，在其他地方使用 \"\"，不要打印值为 None 或 null 的参数。\n\n你应该只生成一个 JSON 格式的计划列表。列表应该是完整的计划列表，不要有 `...`。\n不要生成任何解释 JSON 的文本。\n"}, {"role": "user", "content": "我正在考虑购买年金保险作为退休保障。首先，获取3篇关于年金保险的最新研究文章。然后，获取2024年全年主要保险公司年金产品的历史数据。接着，获取当前的年金保险实时市场数据。最后，通过保险公司名称获取一些年金保险购买建议。"}], "prediction": "[{\n    \"id\": 0,\n    \"name\": \"ResearchArticles.fetch_articles\",\n    \"args\": \"{'topic': 'annuity insurance', 'year': 2023}\"\n},\n{\n    \"id\": 1,\n    \"name\": \"InsuranceData.get_historical_data\",\n    \"args\": \"{'year': 2024, 'productType': 'annuity'}\"\n},\n{\n    \"id\": 2,\n    \"name\": \"MarketData.get_real_time_data\",\n    \"args\": \"{'productType': 'annuity'}\"\n},\n{\n    \"id\": 3,\n    \"name\": \"InsuranceAdvice.get_purchase_advice\",\n    \"args\": \"{'companyName': 'XYZ Insurance Company'}\"\n}]"}