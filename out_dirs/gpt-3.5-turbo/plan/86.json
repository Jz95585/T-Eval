{"meta": {"prompt_type": "json", "API_list": ["ArtInvestment.search_articles", "ArtInvestment.get_historical_data", "ArtInvestment.get_real_time_data", "ArtInvestment.get_investment_advice"]}, "ground_truth": [{"id": 0, "prev": [], "name": "ArtInvestment.search_articles", "args": "{\"topic\": \"retirement art investment\", \"year\": 2024}"}, {"id": 1, "prev": [0], "name": "ArtInvestment.get_historical_data", "args": "{\"year\": 2024}"}, {"id": 2, "prev": [1], "name": "ArtInvestment.get_real_time_data", "args": "{}"}, {"id": 3, "prev": [2], "name": "ArtInvestment.get_investment_advice", "args": "{\"type\": \"art\"}"}, {"id": 4, "prev": [3], "name": "FinishAction", "args": "{}"}], "origin_prompt": [{"role": "system", "content": "你能够调用以下的API:\n[['ArtInvestment.search_articles', {'name': 'ArtInvestment.search_articles', 'description': 'This function searches for articles related to a specific topic and year.', 'required_parameters': [{'name': 'topic', 'type': 'STRING', 'description': 'The topic of the articles, e.g., retirement art investment.'}, {'name': 'year', 'type': 'NUMBER', 'description': 'The year of the articles.'}], 'optional_parameters': [], 'return_data': [{'name': 'articles', 'description': 'A list of up to three matching articles.'}]}], ['ArtInvestment.get_historical_data', {'name': 'ArtInvestment.get_historical_data', 'description': 'This function retrieves historical data for major artworks for a specific year.', 'required_parameters': [{'name': 'year', 'type': 'NUMBER', 'description': 'The year for which historical data is requested.'}], 'optional_parameters': [], 'return_data': [{'name': 'data', 'description': 'Historical data for the year, including prices and trends.'}]}], ['ArtInvestment.get_real_time_data', {'name': 'ArtInvestment.get_real_time_data', 'description': 'This function retrieves real-time market data for artworks.', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'market_data', 'description': 'Real-time market data, including current prices and trends.'}]}], ['ArtInvestment.get_investment_advice', {'name': 'ArtInvestment.get_investment_advice', 'description': 'This function provides investment advice based on the type of artwork.', 'required_parameters': [{'name': 'type', 'type': 'STRING', 'description': 'The type of artwork, e.g., painting, sculpture.'}], 'optional_parameters': [], 'return_data': [{'name': 'advice', 'description': 'Investment advice for the specified type of artwork.'}]}]]\n请生成一个解决用户问题的计划，计划应该是一个行为列表，每个行为的格式如下:\n\n[{\n    // 动作的ID\n    \"id\": number;\n    // 动作要调用的API名称\n    \"name\": string;\n    // 当前API的参数输入(JSON格式)\n    \"args\": \"str(Record<string, any>)\";\n}, ...\n]\n\n你可以在计划中想象参数的值，这些指令将按顺序执行。\n例如，如果你想调用 `ArtInvestment.search_articles` 并传入 `topic` 和 `year`，你可以写下面的计划:\n\n[{\n    \"id\": 0,\n    \"name\": \"ArtInvestment.search_articles\",\n    \"args\": \"{'topic': 'retirement art investment', 'year': 2024}\",\n}, ...\n]\n\n这些参数将在执行时被替换为真实的值。请注意，参数应该是一个字符串，而不是一个字典。\n请在字典的参数中使用 ''，在其他地方使用 \"\"，不要打印值为 None 或 null 的参数。\n\n你应该只生成一个 JSON 格式的计划列表。列表应该是完整的计划列表，不要有 `...`。\n不要生成任何解释 JSON 的文本。\n"}, {"role": "user", "content": "我正在考虑通过艺术品投资来增加退休收入。首先，获取3篇关于退休艺术品投资的最新文章。然后，获取2024年全年主要艺术品的历史数据。接着，获取当前的艺术品实时市场数据。最后，通过艺术品类型获取一些艺术品投资建议。"}], "prediction": "[{\"id\": 0, \"name\": \"ArtInvestment.search_articles\", \"args\": \"{'topic': 'retirement art investment', 'year': 2024}\"}, \n{\"id\": 1, \"name\": \"ArtInvestment.get_historical_data\", \"args\": \"{'year': 2024}\"}, \n{\"id\": 2, \"name\": \"ArtInvestment.get_real_time_data\", \"args\": \"{}\"}, \n{\"id\": 3, \"name\": \"ArtInvestment.get_investment_advice\", \"args\": \"{'type': 'painting'}\"}]"}