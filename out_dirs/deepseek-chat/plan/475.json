{"meta": {"prompt_type": "json", "API_list": ["RealEstateSearch.find_listings", "RealEstateSearch.get_listing_details", "RealEstateSearch.get_community_info", "RealEstateSearch.get_tax_details"]}, "ground_truth": [{"id": 0, "prev": [], "name": "RealEstateSearch.find_listings", "args": "{\"type\": \"rent\", \"location\": \"Beijing\", \"bedrooms\": 3, \"nearby\": \"bus_station\"}"}, {"id": 1, "prev": [0], "name": "RealEstateSearch.get_listing_details", "args": "{\"listingId\": 1001}"}, {"id": 2, "prev": [1], "name": "RealEstateSearch.get_community_info", "args": "{\"communityId\": 1001}"}, {"id": 3, "prev": [2], "name": "RealEstateSearch.get_tax_details", "args": "{\"listingId\": 1001}"}, {"id": 4, "prev": [3], "name": "FinishAction", "args": "{}"}], "origin_prompt": [{"role": "system", "content": "你能够调用以下的API:\n[['RealEstateSearch.find_listings', {'name': 'RealEstateSearch.find_listings', 'description': 'This function searches for real estate listings based on type, location, number of bedrooms, and nearby amenities.', 'required_parameters': [{'name': 'type', 'type': 'STRING', 'description': 'The type of real estate listing, e.g., rent, sale.'}, {'name': 'location', 'type': 'STRING', 'description': 'The location where the listing is.'}, {'name': 'bedrooms', 'type': 'NUMBER', 'description': 'The number of bedrooms in the property.'}, {'name': 'nearby', 'type': 'STRING', 'description': 'Amenities nearby, e.g., bus_station, subway.'}], 'optional_parameters': [], 'return_data': [{'name': 'listings', 'description': 'A list of up to four matching listings, each with an ID, type, location, and bedrooms.'}]}], ['RealEstateSearch.get_listing_details', {'name': 'RealEstateSearch.get_listing_details', 'description': 'This function retrieves detailed information about a specific real estate listing given its ID.', 'required_parameters': [{'name': 'listingId', 'type': 'NUMBER', 'description': 'The ID of the real estate listing.'}], 'optional_parameters': [], 'return_data': [{'name': 'details', 'description': 'Detailed information about the listing, including orientation, price, and availability.'}]}], ['RealEstateSearch.get_community_info', {'name': 'RealEstateSearch.get_community_info', 'description': 'This function retrieves information about the community where a real estate listing is located.', 'required_parameters': [{'name': 'communityId', 'type': 'NUMBER', 'description': 'The ID of the community where the listing is located.'}], 'optional_parameters': [], 'return_data': [{'name': 'info', 'description': 'Information about the community, including security, amenities, and management.'}]}], ['RealEstateSearch.get_tax_details', {'name': 'RealEstateSearch.get_tax_details', 'description': 'This function retrieves tax details for a real estate listing.', 'required_parameters': [{'name': 'listingId', 'type': 'NUMBER', 'description': 'The ID of the real estate listing.'}], 'optional_parameters': [], 'return_data': [{'name': 'taxes', 'description': 'Tax details for the listing, including who pays property taxes and other fees.'}]}]]\n请生成一个解决用户问题的计划，计划应该是一个行为列表，每个行为的格式如下:\n\n[{\n    // 动作的ID\n    \"id\": number;\n    // 动作要调用的API名称\n    \"name\": string;\n    // 当前API的参数输入(JSON格式)\n    \"args\": \"str(Record<string, any>)\";\n}, ...\n]\n\n你可以在计划中想象参数的值，这些指令将按顺序执行。\n例如，如果你想调用 `RealEstateSearch.find_listings` 并传入 `type`、`location`、`bedrooms` 和 `nearby`，你可以写下面的计划:\n\n[{\n    \"id\": 0,\n    \"name\": \"RealEstateSearch.find_listings\",\n    \"args\": \"{'type': 'rent', 'location': 'Beijing', 'bedrooms': 3, 'nearby': 'bus_station'}\",\n}, ...\n]\n\n这些参数将在执行时被替换为真实的值。请注意，参数应该是一个字符串，而不是一个字典。\n请在字典的参数中使用 ''，在其他地方使用 \"\"，不要打印值为 None 或 null 的参数。\n\n你应该只生成一个 JSON 格式的计划列表。列表应该是完整的计划列表，不要有 `...`。\n不要生成任何解释 JSON 的文本。\n"}, {"role": "user", "content": "我想在北京租房，需要找到四套三居室的房源，这些房源需要靠近公交站。然后，我需要查看这些房源的朝向情况，了解房源所在小区的门禁管理情况，最后了解租赁税费的承担方式。"}], "prediction": "[\n    {\n        \"id\": 0,\n        \"name\": \"RealEstateSearch.find_listings\",\n        \"args\": \"{'type': 'rent', 'location': 'Beijing', 'bedrooms': 3, 'nearby': 'bus_station'}\"\n    },\n    {\n        \"id\": 1,\n        \"name\": \"RealEstateSearch.get_listing_details\",\n        \"args\": \"{'listingId': 0}\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"RealEstateSearch.get_listing_details\",\n        \"args\": \"{'listingId': 1}\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"RealEstateSearch.get_listing_details\",\n        \"args\": \"{'listingId': 2}\"\n    },\n    {\n        \"id\": 4,\n        \"name\": \"RealEstateSearch.get_listing_details\",\n        \"args\": \"{'listingId': 3}\"\n    },\n    {\n        \"id\": 5,\n        \"name\": \"RealEstateSearch.get_community_info\",\n        \"args\": \"{'communityId': 0}\"\n    },\n    {\n        \"id\": 6,\n        \"name\": \"RealEstateSearch.get_community_info\",\n        \"args\": \"{'communityId': 1}\"\n    },\n    {\n        \"id\": 7,\n        \"name\": \"RealEstateSearch.get_community_info\",\n        \"args\": \"{'communityId': 2}\"\n    },\n    {\n        \"id\": 8,\n        \"name\": \"RealEstateSearch.get_community_info\",\n        \"args\": \"{'communityId': 3}\"\n    },\n    {\n        \"id\": 9,\n        \"name\": \"RealEstateSearch.get_tax_details\",\n        \"args\": \"{'listingId': 0}\"\n    },\n    {\n        \"id\": 10,\n        \"name\": \"RealEstateSearch.get_tax_details\",\n        \"args\": \"{'listingId': 1}\"\n    },\n    {"}