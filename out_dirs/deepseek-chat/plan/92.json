{"meta": {"prompt_type": "json", "API_list": ["CharitySearch.find_articles", "CharitySearch.get_historical_data", "CharitySearch.get_market_data", "CharitySearch.get_donation_advice"]}, "ground_truth": [{"id": 0, "prev": [], "name": "CharitySearch.find_articles", "args": "{\"topic\": \"retirement charity donation\"}"}, {"id": 1, "prev": [0], "name": "CharitySearch.get_historical_data", "args": "{\"year\": 2024}"}, {"id": 2, "prev": [1], "name": "CharitySearch.get_market_data", "args": "{}"}, {"id": 3, "prev": [2], "name": "CharitySearch.get_donation_advice", "args": "{\"institutionName\": \"Global Charity Fund\"}"}, {"id": 4, "prev": [3], "name": "FinishAction", "args": "{}"}], "origin_prompt": [{"role": "system", "content": "你能够调用以下的API:\n[['CharitySearch.find_articles', {'name': 'CharitySearch.find_articles', 'description': 'This function searches for articles based on a specific topic.', 'required_parameters': [{'name': 'topic', 'type': 'STRING', 'description': 'The topic of the articles, e.g., retirement charity donation.'}], 'optional_parameters': [], 'return_data': [{'name': 'articles', 'description': 'A list of up to three matching articles.'}]}], ['CharitySearch.get_historical_data', {'name': 'CharitySearch.get_historical_data', 'description': 'This function retrieves historical data for major charities for a specific year.', 'required_parameters': [{'name': 'year', 'type': 'NUMBER', 'description': 'The year for which historical data is requested.'}], 'optional_parameters': [], 'return_data': [{'name': 'data', 'description': 'Historical data for the specified year.'}]}], ['CharitySearch.get_market_data', {'name': 'CharitySearch.get_market_data', 'description': 'This function retrieves real-time market data for charities.', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'marketData', 'description': 'Real-time market data for charities.'}]}], ['CharitySearch.get_donation_advice', {'name': 'CharitySearch.get_donation_advice', 'description': 'This function provides donation advice based on the name of a charity institution.', 'required_parameters': [{'name': 'institutionName', 'type': 'STRING', 'description': 'The name of the charity institution.'}], 'optional_parameters': [], 'return_data': [{'name': 'advice', 'description': 'Donation advice for the specified institution.'}]}]]\n请生成一个解决用户问题的计划，计划应该是一个行为列表，每个行为的格式如下:\n\n[{\n    // 动作的ID\n    \"id\": number;\n    // 动作要调用的API名称\n    \"name\": string;\n    // 当前API的参数输入(JSON格式)\n    \"args\": \"str(Record<string, any>)\";\n}, ...\n]\n\n你可以在计划中想象参数的值，这些指令将按顺序执行。\n例如，如果你想调用 `CharitySearch.find_articles` 并传入 `topic`，你可以写下面的计划:\n\n[{\n    \"id\": 0,\n    \"name\": \"CharitySearch.find_articles\",\n    \"args\": \"{'topic': 'retirement charity donation'}\",\n}, ...\n]\n\n这些参数将在执行时被替换为真实的值。请注意，参数应该是一个字符串，而不是一个字典。\n请在字典的参数中使用 ''，在其他地方使用 \"\"，不要打印值为 None 或 null 的参数。\n\n你应该只生成一个 JSON 格式的计划列表。列表应该是完整的计划列表，不要有 `...`。\n不要生成任何解释 JSON 的文本。\n"}, {"role": "user", "content": "我正在考虑通过慈善捐赠来规划我的退休生活。首先，获取3篇关于退休慈善捐赠的最新文章。然后，获取2024年全年主要慈善机构的历史数据。接着，获取当前的慈善机构实时市场数据。最后，通过机构名称获取一些慈善捐赠建议。"}], "prediction": "[\n    {\n        \"id\": 0,\n        \"name\": \"CharitySearch.find_articles\",\n        \"args\": \"{'topic': 'retirement charity donation'}\"\n    },\n    {\n        \"id\": 1,\n        \"name\": \"CharitySearch.get_historical_data\",\n        \"args\": \"{'year': 2024}\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"CharitySearch.get_market_data\",\n        \"args\": \"{}\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"CharitySearch.get_donation_advice\",\n        \"args\": \"{'institutionName': 'example charity institution'}\"\n    }\n]"}