{"meta": {"prompt_type": "json", "API_list": ["InsuranceSearch.find_policies", "InsuranceSearch.get_policy_details", "InsuranceSearch.compare_policies"]}, "ground_truth": [{"id": 0, "prev": [], "name": "InsuranceSearch.find_policies", "args": "{\"type\": \"investment\", \"location\": \"California\"}"}, {"id": 1, "prev": [0], "name": "InsuranceSearch.get_policy_details", "args": "{\"policyId\": 10001}"}, {"id": 2, "prev": [1], "name": "InsuranceSearch.get_policy_details", "args": "{\"policyId\": 10002}"}, {"id": 3, "prev": [2], "name": "InsuranceSearch.get_policy_details", "args": "{\"policyId\": 10003}"}, {"id": 4, "prev": [3], "name": "InsuranceSearch.compare_policies", "args": "{\"policyIds\": [10001, 10002, 10003]}"}, {"id": 5, "prev": [4], "name": "FinishAction", "args": "{}"}], "origin_prompt": [{"role": "system", "content": "你能够调用以下的API:\n[['InsuranceSearch.find_policies', {'name': 'InsuranceSearch.find_policies', 'description': 'This function searches for insurance policies based on type and location.', 'required_parameters': [{'name': 'type', 'type': 'STRING', 'description': 'The type of insurance policy, e.g., health, auto, home.'}, {'name': 'location', 'type': 'STRING', 'description': 'The location where the policy will be applied.'}], 'optional_parameters': [], 'return_data': [{'name': 'policies', 'description': 'A list of up to three matching policies, each with an ID, type, and provider.'}]}], ['InsuranceSearch.get_policy_details', {'name': 'InsuranceSearch.get_policy_details', 'description': 'This function retrieves detailed information about a specific insurance policy given its ID.', 'required_parameters': [{'name': 'policyId', 'type': 'NUMBER', 'description': 'The ID of the insurance policy.'}], 'optional_parameters': [], 'return_data': [{'name': 'details', 'description': 'Detailed information about the policy, including coverage, premium, and terms.'}]}], ['InsuranceSearch.compare_policies', {'name': 'InsuranceSearch.compare_policies', 'description': 'This function compares multiple insurance policies based on their IDs.', 'required_parameters': [{'name': 'policyIds', 'type': 'ARRAY', 'description': 'An array of policy IDs to compare.'}], 'optional_parameters': [], 'return_data': [{'name': 'comparison', 'description': 'A comparison of the selected policies, highlighting differences in coverage and cost.'}]}]]\n请生成一个解决用户问题的计划，计划应该是一个行为列表，每个行为的格式如下:\n\n[{\n    // 动作的ID\n    \"id\": number;\n    // 动作要调用的API名称\n    \"name\": string;\n    // 当前API的参数输入(JSON格式)\n    \"args\": \"str(Record<string, any>)\";\n}, ...\n]\n\n你可以在计划中想象参数的值，这些指令将按顺序执行。\n例如，如果你想调用 `InsuranceSearch.find_policies` 并传入 `type` 和 `location`，你可以写下面的计划:\n\n[{\n    \"id\": 0,\n    \"name\": \"InsuranceSearch.find_policies\",\n    \"args\": \"{'type': 'health', 'location': 'New York'}\",\n}, ...\n]\n\n这些参数将在执行时被替换为真实的值。请注意，参数应该是一个字符串，而不是一个字典。\n请在字典的参数中使用 ''，在其他地方使用 \"\"，不要打印值为 None 或 null 的参数。\n\n你应该只生成一个 JSON 格式的计划列表。列表应该是完整的计划列表，不要有 `...`。\n不要生成任何解释 JSON 的文本。\n"}, {"role": "user", "content": "我打算投资保险理财产品，首先，我需要了解在加州的保险理财产品种类和特点。然后，筛选出3款性价比高的产品。接着，查询它们的保障范围和理赔条件。最后，我需要知道购买这些产品的渠道和流程。"}], "prediction": "[\n    {\n        \"id\": 0,\n        \"name\": \"InsuranceSearch.find_policies\",\n        \"args\": \"{'type': 'investment', 'location': 'California'}\"\n    },\n    {\n        \"id\": 1,\n        \"name\": \"InsuranceSearch.compare_policies\",\n        \"args\": \"{'policyIds': [1, 2, 3]}\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"InsuranceSearch.get_policy_details\",\n        \"args\": \"{'policyId': 1}\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"InsuranceSearch.get_policy_details\",\n        \"args\": \"{'policyId': 2}\"\n    },\n    {\n        \"id\": 4,\n        \"name\": \"InsuranceSearch.get_policy_details\",\n        \"args\": \"{'policyId': 3}\"\n    }\n]"}